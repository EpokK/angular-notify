angular.module("cgNotify",[]).factory("notify",["$timeout","$http","$compile","$templateCache","$rootScope",function(a,b,c,d,e){var f=10,g=15,h=1e4,i="angular-notify.html",j="center",k=0,l=[],m=[],n="notificationIn",o="notificationOut",p=document.createElement("DIV");p.className="proton-notification-template flex flex-column flex-items-center notifications-container",document.body.appendChild(p);var q=function(f){"object"!=typeof f&&(f={message:f}),f.duration=f.duration?f.duration:h,f.templateUrl=f.templateUrl?f.templateUrl:i,f.container=f.container?f.container:p,f.classes=f.classes?f.classes:"",f.onClose=angular.isFunction(f.onClose)?f.onClose:void 0,f.onOpen=angular.isFunction(f.onOpen)?f.onOpen:void 0,f.onClick=angular.isFunction(f.onClick)?f.onClick:void 0;var g=f.scope?f.scope.$new():e.$new();g.$position=f.position?f.position:j,g.$message=f.message,g.$classes=f.classes,g.$messageTemplate=f.messageTemplate,b.get(f.templateUrl,{cache:d}).then(function(b){var d=c(b.data)(g);if(d.bind("webkitTransitionEnd oTransitionEnd otransitionend transitionend msTransitionEnd",function(a){("opacity"===a.propertyName||0===a.currentTarget.style.opacity||a.originalEvent&&"opacity"===a.originalEvent.propertyName)&&(d.remove(),l.splice(l.indexOf(d),1),m.splice(m.indexOf(g),1))}),f.messageTemplate){for(var e,h=0;h<d.children().length;h++)if(angular.element(d.children()[h]).hasClass("cg-notify-message-template")){e=angular.element(d.children()[h]);break}if(!e)throw new Error("cgNotify could not find the .cg-notify-message-template element in "+f.templateUrl+".");e.append(c(f.messageTemplate)(g))}if(angular.element(f.container).append(d),l.push(d),"center"===g.$position&&g.$applyAsync(function(){g.$centerMargin="-"+d[0].offsetWidth/2+"px"}),g.$close=function(){d.removeClass(n),d.addClass(o),angular.isDefined(f.onClose)&&f.onClose(g.$message),a(function(){d.remove()},3e3,!1)},g.$click=function(){angular.isDefined(f.onClick)&&(f.onClick(g.$message),f.onClickClose&&g.$close())},f.duration>0&&a(function(){g.$close()},f.duration,!1),angular.isDefined(f.onOpen)&&f.onOpen(g.$message),k>0)for(var i=m.length+1-k,h=0;i>h;h++)m[h].$close();m.push(g)})["catch"](function(a){throw new Error("Template specified for cgNotify ("+f.templateUrl+") could not be loaded. "+a)});var q={};return q.close=function(){g.$close&&g.$close()},Object.defineProperty(q,"message",{get:function(){return g.$message},set:function(a){g.$message=a}}),q};return q.config=function(a){f=angular.isUndefined(a.startTop)?f:a.startTop,g=angular.isUndefined(a.verticalSpacing)?g:a.verticalSpacing,h=angular.isUndefined(a.duration)?h:a.duration,i=a.templateUrl?a.templateUrl:i,j=angular.isUndefined(a.position)?j:a.position,p=a.container?a.container:p,k=a.maximumOpen?a.maximumOpen:k},q.closeAll=function(){for(var b=l.length-1;b>=0;b--)l[b].addClass(o);a(function(){p.empty()},3e3,!1)},q}]),angular.module("cgNotify").run(["$templateCache",function(a){"use strict";a.put("angular-notify.html","<div class=\"cg-notify-message\" ng-class=\"[$classes, \n    $position === 'center' ? 'cg-notify-message-center' : '',\n    $position === 'left' ? 'cg-notify-message-left' : '',\n    $position === 'right' ? 'cg-notify-message-right' : '']\"\n    ng-style=\"{'margin-left': $centerMargin}\">\n\n    <div ng-show=\"!$messageTemplate\">\n        {{$message}}\n    </div>\n\n"+'    <div ng-show="$messageTemplate" class="cg-notify-message-template">\n        \n    </div>\n\n    <button type="button" class="cg-notify-close" ng-click="$close()">\n        <span aria-hidden="true">&times;</span>\n        <span class="cg-notify-sr-only">Close</span>\n    </button>\n\n</div>')}]);